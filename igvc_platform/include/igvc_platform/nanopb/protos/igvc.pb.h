/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Tue Nov  5 17:37:54 2019. */

#ifndef PB_IGVC_PB_H_INCLUDED
#define PB_IGVC_PB_H_INCLUDED
#include "../pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C"
{
#endif

  /* Struct definitions */
  typedef struct _RequestMessage
  {
    bool has_p_l;
    float p_l;
    bool has_p_r;
    float p_r;
    bool has_i_l;
    float i_l;
    bool has_i_r;
    float i_r;
    bool has_d_l;
    float d_l;
    bool has_d_r;
    float d_r;
    bool has_speed_l;
    float speed_l;
    bool has_speed_r;
    float speed_r;
    bool has_kv_l;
    float kv_l;
    bool has_kv_r;
    float kv_r;
    /* @@protoc_insertion_point(struct:RequestMessage) */
  } RequestMessage;

  typedef struct _ResponseMessage
  {
    bool has_p_l;
    float p_l;
    bool has_p_r;
    float p_r;
    bool has_i_l;
    float i_l;
    bool has_i_r;
    float i_r;
    bool has_d_l;
    float d_l;
    bool has_d_r;
    float d_r;
    bool has_speed_l;
    float speed_l;
    bool has_speed_r;
    float speed_r;
    bool has_dt_sec;
    float dt_sec;
    bool has_voltage;
    float voltage;
    bool has_estop;
    bool estop;
    bool has_kv_l;
    float kv_l;
    bool has_kv_r;
    float kv_r;
    bool has_left_output;
    uint32_t left_output;
    bool has_right_output;
    uint32_t right_output;
    /* @@protoc_insertion_point(struct:ResponseMessage) */
  } ResponseMessage;

  /* Default values for struct fields */
  extern const float RequestMessage_speed_l_default;
  extern const float RequestMessage_speed_r_default;

/* Initializer values for message structs */
#define ResponseMessage_init_default                                                                                   \
  {                                                                                                                    \
    false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0,      \
        false, 0, false, 0, false, 0, false, 0                                                                         \
  }
#define RequestMessage_init_default                                                                                    \
  {                                                                                                                    \
    false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0                 \
  }
#define ResponseMessage_init_zero                                                                                      \
  {                                                                                                                    \
    false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0,      \
        false, 0, false, 0, false, 0, false, 0                                                                         \
  }
#define RequestMessage_init_zero                                                                                       \
  {                                                                                                                    \
    false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0                 \
  }

/* Field tags (for use in manual encoding/decoding) */
#define RequestMessage_p_l_tag 1
#define RequestMessage_p_r_tag 2
#define RequestMessage_i_l_tag 3
#define RequestMessage_i_r_tag 4
#define RequestMessage_d_l_tag 5
#define RequestMessage_d_r_tag 6
#define RequestMessage_speed_l_tag 7
#define RequestMessage_speed_r_tag 8
#define RequestMessage_kv_l_tag 9
#define RequestMessage_kv_r_tag 10
#define ResponseMessage_p_l_tag 1
#define ResponseMessage_p_r_tag 2
#define ResponseMessage_i_l_tag 3
#define ResponseMessage_i_r_tag 4
#define ResponseMessage_d_l_tag 5
#define ResponseMessage_d_r_tag 6
#define ResponseMessage_speed_l_tag 7
#define ResponseMessage_speed_r_tag 8
#define ResponseMessage_dt_sec_tag 9
#define ResponseMessage_voltage_tag 10
#define ResponseMessage_estop_tag 11
#define ResponseMessage_kv_l_tag 12
#define ResponseMessage_kv_r_tag 13
#define ResponseMessage_left_output_tag 14
#define ResponseMessage_right_output_tag 15

  /* Struct field encoding specification for nanopb */
  extern const pb_field_t ResponseMessage_fields[16];
  extern const pb_field_t RequestMessage_fields[11];

/* Maximum encoded size of messages (where known) */
#define ResponseMessage_size 74
#define RequestMessage_size 50

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define IGVC_MESSAGES

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
