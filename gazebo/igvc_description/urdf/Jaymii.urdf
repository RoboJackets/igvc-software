 <robot name="Jaymii" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- base link must have geometry so its axis display in rviz-->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="base_footprint" />
  <link name="body">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="50.0" />
      <inertia  ixx="0.0" ixy="0.0"  ixz="1.0"  iyy="0.0"  iyz="0.0"  izz="0.0" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="model://urdf/meshes/Body.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="model://urdf/meshes/Body.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="body">
    <material>Gazebo/Grey</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <link name="axle">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1.0" />
      <inertia  ixx="0.0" ixy="0.0"  ixz="1.0"  iyy="-0.066042"  iyz="0.0"  izz="0.0" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="model://urdf/meshes/Axle.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="model://urdf/meshes/Axle.dae"/>
      </geometry>
    </collision>
  </link>
  <link name="left_wheel">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1.0" />
      <inertia  ixx="0.994968" ixy="-0.100194"  ixz="0.0"  iyy="0.994968"  iyz="0.0"  izz="-1.0" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="model://urdf/meshes/Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="model://urdf/meshes/Wheel.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="left_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.7</mu1>
    <mu2>0.75</mu2>
  </gazebo>
  <link name="right_wheel">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1.0" />
      <inertia  ixx="0.994968" ixy="-0.100194"  ixz="0.0"  iyy="0.994968"  iyz="0.0"  izz="-1.0" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="model://urdf/meshes/Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="model://urdf/meshes/Wheel.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="right_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.7</mu1>
    <mu2>0.75</mu2>
  </gazebo>
  <link name="front_ball">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1.0" />
      <inertia  ixx="0.0" ixy="-0.0000004"  ixz="0.1"  iyy="0.0"  iyz="-0.0000004"  izz="0.0" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="model://urdf/meshes/Sphere.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="model://urdf/meshes/Sphere.dae"/>
      </geometry>
    </collision>
  </link>
  <link name="back_ball">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1.0" />
      <inertia  ixx="0.0" ixy="-0.0000004"  ixz="0.1"  iyy="0.0"  iyz="-0.0000004"  izz="0.0" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="model://urdf/meshes/Sphere.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="model://urdf/meshes/Sphere.dae"/>
      </geometry>
    </collision>
  </link>
  <link name="lidar">
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.1"/>
      </geometry>
    </visual>
  </link>
  <gazebo reference="lidar">
    <sensor type="ray" name="lidar">
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <!-- Use gaussian noise -->
        <!--
        <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.02</stddev>
      </noise>
      -->
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>3.6</resolution>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>30</max>
          <resolution>0.02</resolution>
        </range>
      </ray>
      <plugin name="lidar_plugin" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>/lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <link name="usb_cam_center">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
  </link>
  <link name="optical_cam_center"/>
  <gazebo reference="usb_cam_center">
    <sensor name="center_camera" type="camera">
        <camera>
          <horizontal_fov>1.2290609</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <!--
          <distortion>
            <k1>-0.25</k1>
            <k2>0.12</k2>
            <k3>0.0</k3>
            <p1>-0.00028</p1>
            <p2>-0.00005</p2>
            <center>0.5 0.5</center>
          </distortion>
          -->
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>usb_cam_center</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>optical_cam_center</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
  </gazebo>
  <link name="usb_cam_left">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
  </link>
  <link name="optical_cam_left"/>
  <gazebo reference="usb_cam_left">
    <sensor name="left_camera" type="camera">
        <camera>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <!--
          <distortion>
            <k1>-0.25</k1>
            <k2>0.12</k2>
            <k3>0.0</k3>
            <p1>-0.00028</p1>
            <p2>-0.00005</p2>
            <center>0.5 0.5</center>
          </distortion>
          -->
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>usb_cam_left</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>optical_cam_left</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
  </gazebo>
  <link name="usb_cam_right">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
  </link>
  <link name="optical_cam_right"/>
  <gazebo reference="usb_cam_right">
    <sensor name="right_camera" type="camera">
        <camera>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <!--
          <distortion>
            <k1>-0.25</k1>
            <k2>0.12</k2>
            <k3>0.0</k3>
            <p1>-0.00028</p1>
            <p2>-0.00005</p2>
            <center>0.5 0.5</center>
          </distortion>
          -->
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>usb_cam_right</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>optical_cam_right</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  <link name="imu">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
  </link>
  <link name="gps">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </visual>
  </link>
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu">
      <serviceName>/imu/calibrate</serviceName>
      <updateRate>200.0</updateRate>
      <bodyName>imu</bodyName>
      <frameId>imu</frameId>
      <topicName>/imu</topicName>
      <rpyOffset>0 0 0</rpyOffset>
      <xyzOffset>0 0 0</xyzOffset>
      <gaussianNoise>0.00000001</gaussianNoise>
      <accelDrift>0.00000001 0.00000001 0.00000001</accelDrift>
      <accelDriftFrequency>0.00000001 0.00000001 0.00000001</accelDriftFrequency>
      <accelGaussianNoise>0.00000001 0.00000001 0.00000001</accelGaussianNoise>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.0 0.0 0.0</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <headingDrift>0.0 0.0 0.0</headingDrift>
      <headingDriftFrequency>0.0 0.0 0.0</headingDriftFrequency>
      <headingGaussianNoise>0.0 0.0 0.0</headingGaussianNoise>
      <yawOffset>1.5707963</yawOffset>
    </plugin>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps">
      <updateRate>20.0</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>/fix</topicName>
      <velocityTopicName>/fix_velocity</velocityTopicName>
      <referenceLatitude>33.774497</referenceLatitude>
      <referenceLongitude>-84.405001</referenceLongitude>
      <referenceAltitude>309.0</referenceAltitude>
      <drift>0.001 0.001 0.001</drift>
      <gaussianNoise>0.0001 0.0001 0.0001</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.005 0.005 0.05</velocityGaussianNoise>
    </plugin>
  </gazebo>

  <transmission name="trans_left_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="axle_to_left_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="trans_right_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="axle_to_right_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <joint name="base_footprint_to_base_link" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 0.12" rpy="0 0 0"/>
    <axis xyz="0 0 0"/>
  </joint>
  <joint name="base_footprint_to_body" type="fixed">
    <origin xyz="0 0 0.12" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="body"/>
  </joint>
  <joint name="base_footprint_to_lidar" type="fixed">
    <origin xyz="0.4572 0 0.9525" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="lidar"/>
  </joint>
  <joint name="base_footprint_to_imu" type="fixed">
    <origin xyz="0.0 0 0.9525" rpy="0 0 3.141" />
    <parent link="base_footprint"/>
    <child link="imu"/>
  </joint>
  <joint name="base_footprint_to_gps" type="fixed">
    <origin xyz="-0.04572 0.2032 0.9525" rpy="0 0 0" /> <!-- -1.5708 -->
    <parent link="base_footprint"/>
    <child link="gps"/>
  </joint>
  <joint name="base_footprint_to_center_camera" type="fixed">
    <origin xyz="0.03302 0 1.7145" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="usb_cam_center"/>
  </joint>
  <joint name="body_to_left_camera" type="fixed">
    <origin xyz="0.0 0.4 0.4" rpy="0 0.174533 0.785398" />
    <parent link="body"/>
    <child link="usb_cam_left"/>
  </joint>
  <joint name="body_to_right_camera" type="fixed">
    <origin xyz="0.0 -0.4 0.4" rpy="0 0.174533 -0.785398" />
    <parent link="body"/>
    <child link="usb_cam_right"/>
  </joint>
  <joint name="base_footprint_to_axle" type="fixed">
    <parent link="base_footprint"/>
    <child link="axle"/>
    <origin xyz="0 0 0.1651" rpy="1.5708 0 0" />
  </joint>
  <joint name="axle_to_left_wheel" type="continuous">
    <parent link="axle"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 -1" rpy="0 0 0" />
    <origin xyz="0 0 -0.32004" rpy="0 0 0" />
  </joint>
  <joint name="axle_to_right_wheel" type="continuous">
    <parent link="axle"/>
    <child link="right_wheel"/>
    <axis xyz="0 0 -1" rpy="0 0 0" />
    <origin xyz="0 0 0.32004" rpy="0 0 0" />
  </joint>
  <!--must have a joint so it is not assumed to be the base link but the ball joint not in URDF must add it in gazebo tag-->
  <joint name="base_footprint_to_front_ball" type="floating">
    <parent link="base_footprint"/>
    <child link="front_ball"/>
    <origin xyz="0.385064 0 0.1016" rpy="0 0 0" />
  </joint>
  <joint name="base_footprint_to_back_ball" type="floating">
    <parent link="base_footprint"/>
    <child link="back_ball"/>
    <origin xyz="-0.385064 0 0.1016" rpy="0 0 0" />
  </joint>
  <joint name="optical_cam_center_joint" type="fixed">
    <parent link="usb_cam_center"/>
    <child link="optical_cam_center"/>
    <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
  </joint>
  <joint name="optical_cam_right_joint" type="fixed">
    <parent link="usb_cam_right"/>
    <child link="optical_cam_right"/>
    <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
  </joint>
  <joint name="optical_cam_left_joint" type="fixed">
    <parent link="usb_cam_left"/>
    <child link="optical_cam_left"/>
    <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
  </joint>
  <!-- this is where the actual ball joints are added-->
  <gazebo>
    <joint name='body_to_back_ball' type='ball'>
      <parent>body</parent>
      <child>back_ball</child>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>
    <joint name='body_to_front_ball' type='ball'>
      <parent>body</parent>
      <child>front_ball</child>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>
  </gazebo>
</robot>
